{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-select_3-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, e as getElement } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport './hardware-back-button-7b6ede21.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-7369bfcc.js';\nimport { h as hostContext, g as getClassMap } from './theme-3f0b0c04.js';\n\nconst watchForOptions = (containerEl, tagName, onChange) => {\n    /* tslint:disable-next-line */\n    if (typeof MutationObserver === 'undefined') {\n        return;\n    }\n    const mutation = new MutationObserver(mutationList => {\n        onChange(getSelectedOption(mutationList, tagName));\n    });\n    mutation.observe(containerEl, {\n        childList: true,\n        subtree: true\n    });\n    return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n    let newOption;\n    mutationList.forEach(mut => {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n        }\n    });\n    return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n    if (el.nodeType !== 1) {\n        return undefined;\n    }\n    const options = (el.tagName === tagName.toUpperCase())\n        ? [el]\n        : Array.from(el.querySelectorAll(tagName));\n    return options.find((o) => o.value === el.value);\n};\n\nconst selectIosCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:20px}.select-icon{width:12px;height:18px}\";\n\nconst selectMdCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:16px}.select-icon{width:19px;height:19px}\";\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part placeholder - The text displayed in the select when there is no value.\n * @part text - The displayed value of the select.\n * @part icon - The select icon container.\n */\nclass Select {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.didInit = false;\n        this.isExpanded = false;\n        /**\n         * If `true`, the user cannot interact with the select.\n         */\n        this.disabled = false;\n        /**\n         * The text to display on the cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the ok button.\n         */\n        this.okText = 'OK';\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the select can accept multiple values.\n         */\n        this.multiple = false;\n        /**\n         * The interface the select should use: `action-sheet`, `popover` or `alert`.\n         */\n        this.interface = 'alert';\n        /**\n         * Any additional options that the `alert`, `action-sheet` or `popover` interface\n         * can take. See the [ion-alert docs](../alert), the\n         * [ion-action-sheet docs](../action-sheet) and the\n         * [ion-popover docs](../popover) for the\n         * create options for each interface.\n         *\n         * Note: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\n         */\n        this.interfaceOptions = {};\n        this.onClick = (ev) => {\n            this.setFocus();\n            this.open(ev);\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    valueChanged() {\n        this.emitStyle();\n        if (this.didInit) {\n            this.ionChange.emit({\n                value: this.value,\n            });\n        }\n    }\n    async connectedCallback() {\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n        });\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n    }\n    componentDidLoad() {\n        this.didInit = true;\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        const overlay = this.overlay = await this.createOverlay(event);\n        this.isExpanded = true;\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.setFocus();\n        });\n        await overlay.present();\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = (this.multiple ? 'checkbox' : 'radio');\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                role: (isOptionSelected(value, selectValue, this.compareWith) ? 'selected' : ''),\n                text: option.textContent,\n                cssClass: optClass,\n                handler: () => {\n                    this.value = value;\n                }\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            }\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        const alertInputs = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                type: inputType,\n                cssClass: optClass,\n                label: option.textContent || '',\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: option.disabled\n            };\n        });\n        return alertInputs;\n    }\n    createPopoverOptions(data, selectValue) {\n        const popoverOptions = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                text: option.textContent || '',\n                cssClass: optClass,\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: option.disabled,\n                handler: () => {\n                    this.value = value;\n                    this.close();\n                }\n            };\n        });\n        return popoverOptions;\n    }\n    async openPopover(ev) {\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const value = this.value;\n        const popoverOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value)\n            } });\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const label = this.getLabel();\n        const labelText = (label) ? label.textContent : null;\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    }\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.value = selectedValues;\n                    }\n                }\n            ], cssClass: ['select-alert', interfaceOptions.cssClass,\n                (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        // TODO check !this.overlay || !this.isFocus()\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    getLabel() {\n        return findItemLabel(this.el);\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'select': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'interactive-disabled': this.disabled,\n            'select-disabled': this.disabled\n        });\n    }\n    render() {\n        const { placeholder, name, disabled, isExpanded, value, el } = this;\n        const mode = getIonMode(this);\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        let addPlaceholderClass = false;\n        let selectText = this.getText();\n        if (selectText === '' && placeholder != null) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(Host, { onClick: this.onClick, role: \"combobox\", \"aria-haspopup\": \"dialog\", \"aria-disabled\": disabled ? 'true' : null, \"aria-expanded\": `${isExpanded}`, \"aria-labelledby\": labelId, class: {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'select-disabled': disabled,\n            } }, h(\"div\", { class: selectTextClasses, part: textPart }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\", part: \"icon\" }, h(\"div\", { class: \"select-icon-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: (btnEl => this.buttonEl = btnEl) })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"placeholder\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n}\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n    if (currentValue === undefined) {\n        return false;\n    }\n    if (Array.isArray(currentValue)) {\n        return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n    }\n    else {\n        return compareOptions(currentValue, compareValue, compareWith);\n    }\n};\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return (value === undefined)\n        ? el.textContent || ''\n        : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n    if (typeof compareWith === 'function') {\n        return compareWith(currentValue, compareValue);\n    }\n    else if (typeof compareWith === 'string') {\n        return currentValue[compareWith] === compareValue[compareWith];\n    }\n    else {\n        return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n    }\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map(v => textForValue(opts, v, compareWith))\n            .filter(opt => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find(opt => {\n        return compareOptions(getOptionValue(opt), value, compareWith);\n    });\n    return selectOpt\n        ? selectOpt.textContent\n        : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\nSelect.style = {\n    /*STENCIL:MODE:ios*/ ios: selectIosCss,\n    /*STENCIL:MODE:md*/ md: selectMdCss\n};\n\nconst selectOptionCss = \":host{display:none}\";\n\nclass SelectOption {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        /**\n         * If `true`, the user cannot interact with the select option.\n         */\n        this.disabled = false;\n    }\n    render() {\n        return (h(Host, { role: \"option\", id: this.inputId, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n}\nlet selectOptionIds = 0;\nSelectOption.style = selectOptionCss;\n\nconst selectPopoverCss = \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h ion-list-header.sc-ion-select-popover,.sc-ion-select-popover-h ion-label.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\n/**\n * @internal\n */\nclass SelectPopover {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Array of options for the popover */\n        this.options = [];\n    }\n    onSelect(ev) {\n        const option = this.options.find(o => o.value === ev.target.value);\n        if (option) {\n            safeCall(option.handler);\n        }\n    }\n    render() {\n        const checkedOption = this.options.find(o => o.checked);\n        const checkedValue = checkedOption ? checkedOption.value : undefined;\n        return (h(Host, { class: getIonMode(this) }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) &&\n            h(\"ion-item\", null, h(\"ion-label\", { class: \"ion-text-wrap\" }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", { value: checkedValue }, this.options.map(option => h(\"ion-item\", { class: getClassMap(option.cssClass) }, h(\"ion-label\", null, option.text), h(\"ion-radio\", { value: option.value, disabled: option.disabled })))))));\n    }\n}\nSelectPopover.style = selectPopoverCss;\n\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };\n"],"sourceRoot":"webpack:///","file":"60-es5.js"}